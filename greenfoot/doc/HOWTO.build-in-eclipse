Using the Eclipse IDE to build and run Greenfoot
------------------------------------------------

Greenfoot is built as an extension to BlueJ. The Greenfoot source bundle contains
both the BlueJ and Greenfoot (extension) project trees. The simplest way to
build Greenfoot in Eclipse is to set up two separate projects, one for the BlueJ
core and one for the Greenfoot extension.

First, see the instructions for building BlueJ in Eclipse.

Next, you need to set up a Greenfoot project.

1. For the build path:

   * check the "Allow output folders for source folders" option.
   * source folder 'greenfoot/src' should have output folder 'greenfoot/classes'
   * source folder 'greenfoot/test/src' should have output folder 'greenfoot/test/classes'

 In the libraries tab:
   
   * Add all the jars in the 'greenfoot/lib' folder, at time of writing these are:
     - commons-codec-1.3.jar
     - commons-httpclient-3.1.jar
     - commons-logging-api-1.1.2.jar
     - jl1.0.1.jar
     - opencsv-2.3.jar
 
 In the projects tab:
 
   * Select the BlueJ project.

2. You will need to use the ant scripts to put things in the right places. So, you need to
   edit the build.properties file for *both* the BlueJ and Greenfoot projects.
   
   Eclipse likes to open the file with a "Build Configuration" editor - you don't want that.
   Right-click and choose "open with", "Properties file editor".

3. Open the ant view (Window - Show view - Ant). Drag the root-level build.xml files from
   both the BlueJ and Greenfoot projects into the view.
   
   Run the "ready-to-run" target in the BlueJ project.
   Run the "ready-to-run" target in the Greenfoot project.

4. Most minor edits will not require re-running the ant targets. You can edit and run in
   Eclipse.

   
To run Greenfoot from within Eclipse:
-------------------------------------

Create a "Java Application" run configuration and specify the following:
  Main:
    Project:  bluej
    Main class:  bluej.Boot
  Arguments:
    Program arguments: -greenfoot=true
                       -greenfootclassesdir=(path to 'classes' directory within greenfoot)
                       -useclassesdir=true
                       -bluej.debug=true
                       -bluej.compiler.showunchecked=false
  Classpath:
     As per BlueJ.
