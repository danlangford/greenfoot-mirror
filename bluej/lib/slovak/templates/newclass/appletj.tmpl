$PKGLINE
import java.awt.*;
import javax.swing.*;

/*******************************************************************************
 * Trieda {@code $CLASSNAME} slúži na … – doplňte opis účelu triedy
 *
 * @author		{meno autora}
 * @version		{verzia, napr.: 0.00.000, prípadne dátum}
 */
public class $CLASSNAME extends JApplet
{
	// inštančné premenné – nahraďte nižšie uvedený príklad svojími
	// vlastnými premennými
	private int x;


	/***************************************************************************
	 * Táto metóda je volaná prehliadačom alebo appletviewerom, ktorý takto
	 * informuje aplet o tom, že bol nahraný do systému. Je volaná ešte pred
	 * prvým volaním metódy {@link #start()}.
	 */
	@Override
	public void init()
	{
		/* Toto je len dočasné riešenie bezpečnostného konfliktu súčasných
		 * prehliadačov vrátane Netscape & Internet Explorera, ktoré nedovoľujú
		 * prístup k AWT systémovej fronte udalostí o ktorý sa JApplet pri
		 * svojom štarte pokúša.
		 * Nie je vylúčené, že váš prehliadač už jeho použitie nevyžaduje. */
		JRootPane rootPane = this.getRootPane();
		rootPane.putClientProperty("defeatSystemEventQueueCheck", Boolean.TRUE);

		/*# Sem doplňte ďalšiu potrebnú inicializáciu vášho apletu. */
	}


	/***************************************************************************
	 * Táto metóda je volaná prehliadačom alebo appletviewerom, ktorý takto
	 * informuje aplet, že bol spustený. Je volaná po metóde {@link #init()}
	 * a pri každom opätovnom navštívení stránky.
	 */
	@Override
	public void start()
	{
		/*# Kód potrebný pre spustenie apletu pri každej návšteve stránky. */
	}


	/***************************************************************************
	 * Táto metóda je volaná prehliadačom alebo appletviewerom, ktorý takto
	 * oznamuje apletu, že má ukončiť svoju činnosť.
	 * Je volaná pri prechode zo stránky s apletom na inú stránkou
	 * a predtým, než je volaná metóda <code>destroy</code>.
	 * V tejto metóde sú ukončované spustené vlákna.
	 */
	@Override
	public void stop()
	{
		/*# Vložte kód potrebný pre zastavenie činnosti apletu. */
	}


	/***************************************************************************
	 * Toto je centrálna metóda apletu – tu je uvedený kód pre vykreslenie
	 * apletu na obrazovku.
	 *
	 * @param	g	objekt triedy {@link java.awt.Graphics} prostredníctvom
	 *				ktorého aplet kreslí na obrazovku…
	 */
	@Override
	public void paint(Graphics g)
	{
		// Aplet zobrazí jednoduchý text
		g.setColor(Color.white);
		g.fillRect(0, 0, 200, 100);
		g.setColor(Color.black);
		g.drawString("Ukážkový aplet", 20, 20);
		g.setColor(Color.blue);
		g.drawString("vytvorený v BlueJ", 20, 40);
	}


	/***************************************************************************
	 * Táto metóda je volaná prehliadačom alebo appletviewerom, ktorý takto
	 * oznamuje apletu, že má uvoľniť všetky alokované zdroje.
	 * Pred touto metódou je vždy volaná metóda {@link #stop()}.
	 */
	@Override
	public void destroy()
	{
		/*# Vložte kód potrebný pre uvoľnenie alokovaných zdrojov. */
	}


	/***************************************************************************
	 * Vracia informácie o aplete.
	 * Aplet by mal túto metódu prekryť a vrátiť reťazec obsahujúci
	 * informácie o autorovi, verzii a autorských právach apletu.
	 *
	 * @return Reťazec obsahuje informácie o aplete
	 */
	@Override
	public String getAppletInfo()
	{
		/*# Sem vložte informácie o aplete. */
		return	"Názov:   \n" +
				"Autor:   \n" +
				"Jednoduchý ukážkový aplet. ";
	}


	/***************************************************************************
	 * Vracia informácie o parametroch, ktoré tento aplet dokáže spracovať.
	 * Aplet by mal prekryť túto metódu tak, aby vracala pole polí
	 * textových reťazcov opisujúcich tieto parametre.
	 * Každý prvok tohto poľa se skladá z troch reťazcov obsahujúcich
	 * meno, typ a opis.
	 *
	 * @return Pole trojíc reťazcov reprezentujúcich parametre tohto apletu
	 */
	@Override
	public String[][] getParameterInfo()
	{
		/*# Sem vložte informácie o parametroch. */
		String paramInfo[][] = {
			{ "prvýParametr",  "1-10",     "opis prvého parametra" },
			{ "stav",          "boolean",  "opis druhého parametra" },
			{ "obrázky",       "url",      "opis tretieho parametra" }
		};
		return paramInfo;
	}
}
