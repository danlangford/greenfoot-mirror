<?xml version="1.0" encoding="UTF-8"?>
<Include xmlns='http://schemas.microsoft.com/wix/2006/wi'>
  <!-- This file has all the code for trying to detect currently installed JDKs on the system.
       It's complicated because we can only easily perform exact checks (rather than checking for a range of versions),
       and we need to take account of 32-bit and 64-bit JDKs.  It's also complicated
       because WiX only allows one default value and one SetProperty per property,
       so we split up the logic into setting different properties, which are shown to
       the user in the installer.  For actual internal logic, JDKVERSION and JDKHOME
       should be the ones to use after this code executes.  -->
       
    <!-- The 64-bit registry searches below give warnings because they are using
         a 64-bit locator.  It seems to work fine in practice on 32-bit and 64-bit systems,
         so I think these can be ignored. -->
    <Property Id="JDKVERSION32">
      <!--  Looks in 32-bit only, on x86 and x64: -->
      <RegistrySearch Id="JDKVersion32RegKey" Root="HKLM" Key="SOFTWARE\JavaSoft\Java Development Kit" Name="CurrentVersion" Type="raw" />
    </Property>
    <Property Id="JDKVERSION">
      <RegistrySearch Id="JDKVersionRegKey" Root="HKLM" Key="SOFTWARE\JavaSoft\Java Development Kit" Name="CurrentVersion" Type="raw" Win64="yes"/>
    </Property>
    <Property Id="JDKHOME32">
      <!--  Looks in 32-bit only, on x86 and x64: -->
      <RegistrySearch Id="JDK6Home32RegKey" Root="HKLM" Key="SOFTWARE\JavaSoft\Java Development Kit\[JDKVERSION32]" Name="JavaHome" Type="raw" />
    </Property>
    <Property Id="JDKHOME">
      <RegistrySearch Id="JDK6HomeRegKey" Root="HKLM" Key="SOFTWARE\JavaSoft\Java Development Kit\[JDKVERSION]" Name="JavaHome" Type="raw" Win64="yes"/>
    </Property>
    
    <!--  If we didn't find a suitable native-bit (i.e. 32-bit on 32-bit machines, 64-bit on 64-bit) JDK, override to use the 32-bit if it is suitable -->
    <SetProperty Id="JDKVERSION" After="AppSearch" Value="[JDKVERSION32]">
      <![CDATA[((JDKVERSION<>"1.6" OR JDKVERSION<>"1.7") OR JDKHOME="") AND (JDKVERSION32="1.6" OR JDKVERSION32="1.7" OR JDKVERSION32>JDKVERSION)]]>
    </SetProperty>    
    <SetProperty Id="JDKHOME" After="AppSearch" Value="[JDKHOME32]">
      <![CDATA[((JDKVERSION<>"1.6" OR JDKVERSION<>"1.7") OR JDKHOME="") AND (JDKVERSION32="1.6" OR JDKVERSION32="1.7" OR JDKVERSION32>JDKVERSION)]]>
    </SetProperty>
    
    <!--  These are the pieces of text shown in the GUI.  Below are the default values: -->
    <Property Id="JDKFOUND">
      No suitable JDK could be found.  You may proceed with installation, but !(loc.SOFTWARE) will not work without a JDK (version 1.6 or 1.7) installed.
    </Property>
    <Property Id="JDKJUSTRIGHT" Value=" " />
    <Property Id="JDKTOOOLD" Value=" " />
    <Property Id="JDKTOONEW" Value=" " />
    
    <!--  Set the GUI text under the appropriate conditions -->
    <SetProperty Id="JDKFOUND" After="AppSearch" Value="JDK Version [JDKVERSION] found at [JDKHOME].">
      <![CDATA[JDKVERSION<>""]]>
    </SetProperty>
    <SetProperty Id="JDKJUSTRIGHT" After="AppSearch" Value="This JDK is a suitable version, and will be used by !(loc.SOFTWARE).  To choose a different JDK, use the Select VM shortcut once !(loc.SOFTWARE) is installed.">
      <![CDATA[JDKVERSION="1.6" OR JDKVERSION="1.7"]]>
    </SetProperty>
    
    <SetProperty Id="JDKTOOOLD" After="AppSearch" Value="This JDK is too old.  For !(loc.SOFTWARE) to work correctly, you will need to have JDK 1.6 or 1.7 installed on your machine.">
      <![CDATA[JDKVERSION<"1.6" AND JDKVERSION<>""]]>
    </SetProperty>
    
    <SetProperty Id="JDKTOONEW" After="AppSearch" Value="This JDK is newer than the !(loc.SOFTWARE) release you are installing, and thus you may encounter problems.  If you have problems, try looking for a newer !(loc.SOFTWARE) version that supports your JDK (or consider downgrading if you are using an unreleased JDK).">
      <![CDATA[JDKVERSION>"1.7" AND JDKVERSION<>""]]>
    </SetProperty>
</Include>